{"version":3,"sources":["TodoHeader.js","EditModal.js","App.js","serviceWorker.js","index.js"],"names":["TodoHeader","memo","showStatusList","active","className","size","type","onClick","EditModal","handleCancel","handleOk","visible","editItem","Form","useForm","form","useEffect","setFieldsValue","getContainer","title","onOk","getFieldsValue","onCancel","name","Item","label","rules","required","message","App","useState","data","setData","showArr","setShowArr","setVisible","setEditItem","setActive","useCallback","showStatus","newData","filter","item","isDone","value","id","map","onFinish","price","push","Date","now","dataTime","resetFields","htmlType","header","footer","length","bordered","dataSource","renderItem","CheckSquareOutlined","fill","index","findIndex","finishTodo","EditOutlined","style","margin","v","SnippetsOutlined","toggleTodo","CloseOutlined","splice","deleteTodo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9560fb8c.chunk.js","sourcesContent":["import React, {memo } from \"react\";\nimport { Button} from \"antd\";\n\nconst TodoHeader = memo(({showStatusList,active}) =>  {\n    return (\n      <div className={\"mainHeader\"}>\n        任务列表\n        <div className=\"mainHandle\">\n          <Button\n            size=\"small\"\n            type=\"default\"\n            className={`\"classifyBtn\"${active === \"SHOW_ALL\" ? \"active\" : null}`}\n            onClick={() => showStatusList(\"SHOW_ALL\")}\n          >\n            全部\n          </Button>\n          <Button\n            size=\"small\"\n            type=\"default\"\n            className={`\"classifyBtn\"${active === \"SHOW_COMPLETED\" ? \"active\" : null}`}\n            onClick={() => showStatusList(\"SHOW_COMPLETED\")}\n          >\n            已完成\n          </Button>\n          <Button\n            size=\"small\"\n            type=\"default\"\n            className={`\"classifyBtn\"${active === \"SHOW_ACTIVE\" ? \"active\" : null}`}\n            onClick={() => showStatusList(\"SHOW_ACTIVE\")}\n          >\n            未完成\n          </Button>\n        </div>\n      </div>\n    );\n  })\n\n  export default TodoHeader","import { Modal,Form,Input } from 'antd';\nimport React,{useEffect,memo} from 'react'\n\n\nconst EditModal = memo(({handleCancel,handleOk,visible,editItem}) => {\n    \n    const [form] = Form.useForm();\n    useEffect(() => {\n        form.setFieldsValue(editItem)\n    },[editItem,form])\n    return <div>\n    <Modal\n    getContainer={false}\n      title=\"编辑饮品\"\n      visible={visible}\n      onOk={() => {handleCancel(); handleOk(form.getFieldsValue(),editItem) }}\n      onCancel={handleCancel}\n    >\n      <Form\n      form={form}\n      name='edit'\n     \n    >\n       <Form.Item\n        label=\"饮品\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: '请输入饮料名！',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"价格\"\n        name=\"price\"\n        rules={[\n          {\n            required: true,\n            message: '请输入价格！',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      </Form>\n    </Modal>\n  </div>\n})\n\n\nexport default EditModal","\nimport './App.css';\n\nimport React, { useState, useEffect,useCallback } from \"react\";\nimport { CheckSquareOutlined,SnippetsOutlined,CloseOutlined,EditOutlined } from '@ant-design/icons';\nimport TodoHeader from './TodoHeader'\nimport EditModal from './EditModal'\n\n\nimport { Input, List, Button,Form} from \"antd\";\n\n\nconst App = () =>  {\n  //  data - 完整的 todo 数据\n  const [data, setData] = useState([]);\n  const [form] = Form.useForm();\n  const [showArr, setShowArr] = useState([...data]);\n  const [visible,setVisible] = useState(false)\n  const [editItem,setEditItem] = useState(false)\n\n  // 当 data 发生改变时，执行该 effect，替换 showArr\n  useEffect(() => {\n    setShowArr([...data]);\n  }, [data]);\n\n\n  // 控制当前展示任务按钮样式 active\n  const [active, setActive] = useState(\"SHOW_ALL\");\n\n  const onFinish = ({name,price}) => {\n    const newData = [...data];\n    newData.push({\n      id: Date.now(),\n      name,\n      price,\n      isDone: false,\n      dataTime: new Date()\n    });\n    setData(newData);\n    form.resetFields();\n  }\n\n  const showStatusList = useCallback(() => {\n    return (showStatus) => {\n    \n      if (showStatus === \"SHOW_COMPLETED\") {\n        const newData = data.filter(item => item.isDone);\n        setShowArr([...newData]);\n        setActive(\"SHOW_COMPLETED\");\n      } else if (showStatus === \"SHOW_ACTIVE\") {\n        const newData = data.filter(item => !item.isDone);\n        setShowArr([...newData]);\n        setActive(\"SHOW_ACTIVE\");\n      } else {\n        setShowArr([...data]);\n        setActive(\"SHOW_ALL\");\n      }\n    \n  }\n  },[data])\n\n  const finishTodo = (id) => {\n    const newData = [...data];\n    const index = newData.findIndex(item => item.id === id);\n    newData[index].isDone = true;\n    setData(newData);\n  }\n\n  const toggleTodo = (id) =>  {\n    const newData = [...data];\n    const index = newData.findIndex(item => item.id === id);\n    newData[index].isDone = !newData[index].isDone;\n    setData(newData);\n  }\n\n  const deleteTodo = (id) => {\n    const newData = [...data];\n    const index = newData.findIndex(item => item.id === id);\n    newData.splice(index, 1);\n    setData(newData);\n  }\n\n  const edit = (v) => {\n    setVisible(true)\n    setEditItem(v)\n  }\n  const handleOk = useCallback(() => {\n    return (value,{id}) => {\n      let newData = data.map(item => {\n        if(item.id === id){\n          return {\n            ...item,...value\n          }\n        }\n        return {...item}\n      })\n      setData(newData)\n    }\n  },[data])\n  const handleCancel = useCallback(() => {\n    return setVisible(false)\n  },[])\n  return (\n    <div className=\"todoList\">\n      <div className=\"todoHeader\">\n        <h1 className=\"card-title\">React Hooks</h1>\n        <span className=\"card-subtitle\">添加饮品，管理dailydrinks</span>\n      </div>\n      <div className=\"todoSearch\">\n      <Form\n      form={form}\n      name=\"advanced_search\"\n      className=\"ant-advanced-search-form\"\n      onFinish={onFinish}\n    >\n       <Form.Item\n        label=\"饮品\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: '请输入饮料名！',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"价格\"\n        name=\"price\"\n        rules={[\n          {\n            required: true,\n            message: '请输入价格！',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item >\n        <Button type=\"primary\" htmlType=\"submit\">\n          添加饮品\n        </Button>\n      </Form.Item>\n      </Form>\n      </div>\n      <div className=\"todoMain\">\n        <List\n          header={<TodoHeader showStatusList={showStatusList} active={active} />}\n          footer={\n            <div className=\"mainFooter\">共 {showArr.length} 项任务</div>\n          }\n          bordered\n          dataSource={showArr}\n          renderItem={item => (\n            <List.Item>\n              <Button\n                size=\"small\"\n                type={item.isDone ? \"primary\" : \"danger\"}\n                className=\"status\"\n              >\n                {item.isDone ? \"完成\" : \"未完成\"}\n              </Button>\n              <p className=\"content\">饮料名称:{item.name}</p>\n              <p className=\"content\">价格:{item.price}</p>\n              <div className=\"operate\">\n                \n                {item.isDone ? (\n                  \"\"\n                ) : (\n                  <CheckSquareOutlined fill='green'  onClick={() => finishTodo(item.id)}/>\n                )}\n                <EditOutlined style={{margin:'0 0 0 10px'}}  onClick={() => edit(item)} />\n                <SnippetsOutlined style={{margin:'0 10px'}}  onClick={() => toggleTodo(item.id)}/>\n                <CloseOutlined fill='red' onClick={() => deleteTodo(item.id)} />\n              \n              </div>\n            </List.Item>\n          )}\n        />\n      </div>\n      <EditModal visible={visible} handleOk={handleOk} editItem={editItem} handleCancel={handleCancel}/>\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}